- name: Create {{ kubuntu_image_ocs_dir }}
  ansible.builtin.file:
    name: "{{ kubuntu_image_ocs_dir }}"
    state: directory
    mode: '0700'

- name: Convert the raw image to a clonezilla image
  block:
    - name: Set up loop device with the .img file to read from
      ansible.builtin.command: losetup -fP --show {{ kubuntu_image_img_path }}
      register: kubuntu_image_ocs_losetup_result
      changed_when: true

    - name: Create a clonezilla image from the loop device
      ansible.builtin.command: >-
        ocs-sr
        {{ kubuntu_image_ocs_savedisk_opts }}
        -or '{{ kubuntu_image_ocs_dir }}'
        savedisk {{ kubuntu_image_ocs_image }} {{ kubuntu_image_ocs_losetup_result.stdout }}
      args:
        chdir: "{{ kubuntu_image_ocs_dir }}"
        creates: "{{ kubuntu_image_ocs_image_path }}"

  always:
    - name: Remove the loop device
      ansible.builtin.command: losetup -d {{ kubuntu_image_ocs_losetup_result.stdout }}
      changed_when: true

- name: Copy ocs-iso
  ansible.builtin.copy:
    src: "{{ kubuntu_image_ocs_iso_script_original }}"
    dest: "{{ kubuntu_image_ocs_iso_script_custom }}"
    remote_src: true
    mode: '0755'

- name: Modify custom ocs-iso
  ansible.builtin.lineinfile:
    path: "{{ kubuntu_image_ocs_iso_script_custom }}"
    regexp: '^clonezilla_iso_arch_tag='
    line: 'clonezilla_iso_arch_tag="-amd64"'

- name: Create clonezilla ISO
  ansible.builtin.shell: >-
    yes |
    {{ kubuntu_image_ocs_iso_script_custom | quote }}
    {{ kubuntu_image_ocs_iso_opts }}
    -p {{ kubuntu_image_ocs_dir | quote }}
    -e "{{ kubuntu_image_ocs_iso_restoredisk_opts }} restoredisk {{ kubuntu_image_ocs_image }} {{ kubuntu_image_ocs_install_device }}"
    -a "{{ kubuntu_image_ocs_iso_path | regex_replace('.iso$', '') }}"
    {{ kubuntu_image_ocs_image }}
  args:
    chdir: "{{ kubuntu_image_ocs_dir }}"
    creates: "{{ kubuntu_image_ocs_iso_path }}"
